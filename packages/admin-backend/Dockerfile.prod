# Production Dockerfile for Admin Backend
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Copy monorepo root files
COPY package*.json ./
COPY lerna.json ./

# Copy shared-types package
COPY packages/shared-types ./packages/shared-types

# Copy admin-backend package
COPY packages/admin-backend ./packages/admin-backend

# Install dependencies
RUN npm ci --only=production

# Build shared-types
WORKDIR /app/packages/shared-types
RUN npm run build

# Build admin-backend
WORKDIR /app/packages/admin-backend
RUN npm run build

# Production stage
FROM node:20-alpine AS production

# Create app user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S admin-backend -u 1001

# Set working directory
WORKDIR /app

# Copy built application
COPY --from=builder --chown=admin-backend:nodejs /app/packages/shared-types/dist ./packages/shared-types/dist
COPY --from=builder --chown=admin-backend:nodejs /app/packages/shared-types/package.json ./packages/shared-types/package.json
COPY --from=builder --chown=admin-backend:nodejs /app/packages/admin-backend/dist ./packages/admin-backend/dist
COPY --from=builder --chown=admin-backend:nodejs /app/packages/admin-backend/package.json ./packages/admin-backend/package.json

# Install only production dependencies
WORKDIR /app/packages/admin-backend
RUN npm ci --only=production && npm cache clean --force

# Switch to non-root user
USER admin-backend

# Expose port
EXPOSE 3002

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3002/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start application
CMD ["node", "dist/index.js"] 