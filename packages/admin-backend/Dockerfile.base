# Base Dockerfile Template for Benalsam Monorepo
# Bu template tüm paketler için ortak kullanılacak

# Base stage - ortak dependencies
FROM node:20-alpine AS base
WORKDIR /app

# Install pnpm globally
RUN npm install -g pnpm

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs
RUN adduser -S appuser -u 1001

# Dependencies stage - sadece package.json dosyalarını kopyala
FROM base AS deps
COPY package.json pnpm-lock.yaml ./
COPY packages/*/package.json ./packages/*/
RUN pnpm install --frozen-lockfile --no-verify-store-integrity

# Development stage - hot reload için
FROM base AS development
COPY --from=deps /app/node_modules ./node_modules
COPY . .
WORKDIR /app/packages/admin-backend

# Development environment variables
ENV NODE_ENV=development
ENV HOST=0.0.0.0
EXPOSE 3002

# Switch to non-root user
USER appuser
CMD ["pnpm", "run", "dev"]

# Build stage - TypeScript compilation
FROM base AS builder
COPY --from=deps /app/node_modules ./node_modules
COPY . .
WORKDIR /app/packages/admin-backend
RUN pnpm run build

# Production stage - minimal production image
FROM node:20-alpine AS production
WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S appuser -u 1001

# Install pnpm
RUN npm install -g pnpm

# Copy package files
COPY package.json pnpm-lock.yaml ./
COPY packages/*/package.json ./packages/*/

# Install only production dependencies
RUN pnpm install --frozen-lockfile --prod

# Copy built application
COPY --from=builder --chown=appuser:nodejs /app/packages/admin-backend/dist ./dist
COPY --from=builder --chown=appuser:nodejs /app/packages/admin-backend/package.json ./package.json

# Switch to non-root user
USER appuser

# Production environment variables
ENV NODE_ENV=production
ENV PORT=3002
EXPOSE 3002

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3002/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

CMD ["node", "dist/index.js"] 