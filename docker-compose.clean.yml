# ===== CLEAN DOCKER COMPOSE =====
version: '3.8'

services:
  # Admin Backend
  admin-backend:
    build:
      context: .
      dockerfile: packages/admin-backend/Dockerfile.clean
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
    env_file:
      - .env
    depends_on:
      - redis
      - elasticsearch
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Admin UI
  admin-ui:
    build:
      context: .
      dockerfile: packages/admin-ui/Dockerfile.clean
    ports:
      - "3003:3003"
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Web
  web:
    build:
      context: .
      dockerfile: packages/web/Dockerfile.clean
    ports:
      - "5173:5173"
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Elasticsearch
  elasticsearch:
    image: elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms256m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  default:
    name: benalsam-network
