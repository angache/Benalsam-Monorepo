name: 🚀 Deploy Admin Panel

on:
  push:
    branches: [ main ]
    paths:
      - 'packages/admin-backend/**'
      - 'packages/admin-ui/**'
      - 'packages/shared-types/**'
      - 'docker-compose.prod.yml'
      - '.github/workflows/deploy-admin.yml'
  workflow_dispatch:

env:
  VPS_HOST: ${{ secrets.VPS_HOST }}
  VPS_USER: ${{ secrets.VPS_USER }}
  VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
  DEPLOY_PATH: /opt/benalsam-admin

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          npm ci
          cd packages/shared-types && npm ci
          cd ../admin-backend && npm ci
          cd ../admin-ui && npm ci

      - name: 🧪 Run tests
        run: |
          cd packages/shared-types && npm test
          cd ../admin-backend && npm test
          cd ../admin-ui && npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏗️ Build and push admin-backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/admin-backend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/benalsam-admin-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/benalsam-admin-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🏗️ Build and push admin-ui
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/admin-ui/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/benalsam-admin-ui:latest
            ${{ secrets.DOCKER_USERNAME }}/benalsam-admin-ui:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔑 Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: 🚀 Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            # Create deployment directory if not exists
            mkdir -p ${{ env.DEPLOY_PATH }}
            cd ${{ env.DEPLOY_PATH }}
            
            # Backup current deployment
            if [ -d "current" ]; then
              cp -r current backup-$(date +%Y%m%d-%H%M%S)
            fi
            
            # Pull latest code
            git pull origin main
            
            # Update environment variables
            cp .env.example .env
            # Note: Environment variables should be set manually on VPS
            
            # Pull latest Docker images
            docker-compose -f docker-compose.prod.yml pull
            
            # Deploy with zero-downtime
            docker-compose -f docker-compose.prod.yml up -d --force-recreate
            
            # Wait for services to be healthy
            sleep 30
            
            # Health check
            if curl -f http://localhost:3002/api/v1/health; then
              echo "✅ Deployment successful"
              
              # Cleanup old backups (keep last 5)
              ls -t backup-* | tail -n +6 | xargs -r rm -rf
            else
              echo "❌ Health check failed, rolling back..."
              docker-compose -f docker-compose.prod.yml down
              if [ -d "backup-$(date +%Y%m%d-%H%M%S)" ]; then
                cp -r backup-$(date +%Y%m%d-%H%M%S) current
                docker-compose -f docker-compose.prod.yml up -d
              fi
              exit 1
            fi
          EOF

      - name: ✅ Verify deployment
        run: |
          sleep 10
          curl -f http://${{ secrets.VPS_HOST }}/api/v1/health || exit 1

      - name: 📧 Notify success
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#deployments'
          text: '✅ Admin Panel deployed successfully!'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: 📧 Notify failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#deployments'
          text: '❌ Admin Panel deployment failed!'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 